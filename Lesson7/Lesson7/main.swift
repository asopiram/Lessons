//
//  main.swift
//  Lesson7
//
//  Created by –î–º–∏—Ç—Ä–∏–π –®–∞—Ä–æ–≤–∞—Ä–æ–≤ on 11.10.2021.
//

import Foundation

var isInControl = true

func selfDrive() {
    if isInControl {//–µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Å–∫–æ–ª—å–∫–æ, —Ç–æ –Ω–∞–¥–æ –±—É–¥–µ—Ç –ø–ª–æ–¥–∏—Ç—å if else
        print("all good")
        
    } else {
        print("baaad")
    }
        
}

enum TeslaError: Error{
    case lostGPS
    case lowBATTERY
    
}


var lostGPS = true
var lowBattery = false

func autoDriveTesla() {//—Ç—É—Ç –º—ã —Å—Ä–∞–∑—É –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    if lostGPS {
        print("We lost")
    }
    
    if lowBattery {
        print("Low battery")
    }
}


//–Ω–∞–º –º–µ—Ç–æ–¥ –≤—ã–∫–∏–Ω–µ—Ç –Ω–∞–º –æ—à–∏–±–∫—É —Å –ø–æ–º–æ—â—å—é throws, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ
func autoDriveTeslaError() throws {
    if lostGPS {
        throw TeslaError.lostGPS
    }
    
    if lowBattery {
        throw TeslaError.lowBATTERY
    }
    //–µ—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç, —Ç–æ –º–æ–∂–µ–º –¥–∞–ª—å—à–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–µ—Ç–æ–¥—ã
    //–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
    //–≤—ã–≤–æ–¥–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω
}


do {//–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—à–∏–±–∫–∏
    try autoDriveTeslaError()
} catch TeslaError.lostGPS {
    print("we lost")
} catch TeslaError.lowBATTERY {
    print("low battery")
}
            

//–µ—â–µ –ø—Ä–∏–º–µ—Ä

enum jsonDownload: Error {
    case moreSizeFileDownload
    case noNameFiles
    case serverError(error: Int)
    
}

struct File {
    var image: String
    var size: Int
    
}


class downloadJSON {
    var fileDownload = [
        "dog.jped": File(image: "dog", size: 5),
        "cat.jpeg": File(image: "cat", size: 10),
        "car.jpeg": File(image: "car", size: 2)
    ]
    
    var sizeDownload = 8
    var errorValue = 0
    
    func download(itemNamed name: String, error: Int) throws {
        guard let file = fileDownload[name] else {//guard —Å–æ–∑–¥–∞–µ—Ç –±–æ–ª–µ–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –≤ –æ—Ç–ª–∏—á–∏–µ –æ—Ç if else
            throw jsonDownload.noNameFiles
        }
        
        guard file.size <= sizeDownload else{
            throw jsonDownload.moreSizeFileDownload
        }
        
        guard error == 200 else {
            throw jsonDownload.serverError(error: errorValue)
        }
        
        print("–ó–∞–≥—Ä—É–∂–µ–Ω–∞ \(name) —Ä–∞–∑–º–µ—Ä–æ–º \(file.size)")
    }
}


let UICollection = [
    "TableView" : "dog.jpeg",
    "TabBar" : "car.jpeg",
    "CollectionView" : "cat.jpeg"
]


func download(collection: String, funcDownload: downloadJSON) throws {//–µ—Å–ª–∏ –º—ã —Å—Å—ã–ª–∞–µ–º—Å—è –Ω–∞ –º–µ—Ç–æ–¥ —Å throws, —Ç–æ —Ç—É—Ç –æ–Ω —Ç–æ–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å
    let serverMessage = 200
    let collectionItem = UICollection[collection] ?? "LoadScreen"
    try funcDownload.download(itemNamed: collectionItem, error: serverMessage)
}

do {
    try download(collection: "TableView", funcDownload: downloadJSON())
} catch jsonDownload.noNameFiles {
    print("–ù–µ—Ç —Ç–∞–∫–æ–≥–æ —Ñ–∞–π–ª–∞")
    
} catch jsonDownload.moreSizeFileDownload {
    print("–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π —Ñ–∞–π–ª")
} catch jsonDownload.serverError(let errorCode) {
    print("–°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É \(errorCode)")
}


//try! loadImage("/Resource/cat.jpeg")// –º—ã –Ω–µ —Ö–æ—Ç–∏–º –ø—Ä–æ—Ö–æ–¥–∏—Ç—å —ç—Ç–∞–ø –ø—Ä–æ–≤–µ—Ä–∫–∏. –≠—Ç–æ –∫–∞–∫ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ —Ä–∞—Å–∫—Ä—ã—Ç–∏–µ –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–∏–ø–∞. –ù—É–∂–Ω–æ –±—ã—Ç—å –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã–º


func someThrowingFunction() throws -> Int {
    return 0
}

var y: Int?

do {
    y = try someThrowingFunction()
} catch {
    y = nil //–µ—Å–ª–∏ —Å–ª—É—á–∞–µ—Ç—Å—è –æ—à–∏–±–∫–∞, —Ç–æ y - nil
}

let x = try? someThrowingFunction() // —ç—Ç–æ –∑–∞–º–µ–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫–∏ —Å–≤–µ—Ä—Ö—É


enum PasswordError: Error {
    case obvious
}

func checkPassword(_ password: String) throws -> Bool {
    if password != "password" {
        throws PasswordError.obvious
    }
    return true
}

do {
    try checkPassword("password")
    print("ALL OK")
} catch {
    print("Error password")
}

if let result = try? checkPassword("password") {
    print("all OK \(result)")

} else {
    print("error")
}

//
var array: [String] = ["üî•","üí®","‚ö°Ô∏è","üíß"]
